// Code generated by go-queryset. DO NOT EDIT.
package models

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set ArticleQuerySet

// ArticleQuerySet is an queryset type for Article
type ArticleQuerySet struct {
	db *gorm.DB
}

// NewArticleQuerySet constructs new ArticleQuerySet
func NewArticleQuerySet(db *gorm.DB) ArticleQuerySet {
	return ArticleQuerySet{
		db: db.Model(&Article{}),
	}
}

func (qs ArticleQuerySet) w(db *gorm.DB) ArticleQuerySet {
	return NewArticleQuerySet(db)
}

// All is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) All(ret *[]Article) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) Count() (int, error) {
	var count int
	err := qs.db.Count(&count).Error
	return count, err
}

// Create is an autogenerated method
// nolint: dupl
func (o *Article) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) CreatedAtEq(createdAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) CreatedAtGt(createdAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) CreatedAtGte(createdAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) CreatedAtLt(createdAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) CreatedAtLte(createdAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) CreatedAtNe(createdAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) Delete() error {
	return qs.db.Delete(Article{}).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *Article) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) DeletedAtEq(deletedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("deleted_at = ?", deletedAt))
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) DeletedAtGt(deletedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("deleted_at > ?", deletedAt))
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) DeletedAtGte(deletedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("deleted_at >= ?", deletedAt))
}

// DeletedAtIsNotNull is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) DeletedAtIsNotNull() ArticleQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NOT NULL"))
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) DeletedAtIsNull() ArticleQuerySet {
	return qs.w(qs.db.Where("deleted_at IS NULL"))
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) DeletedAtLt(deletedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("deleted_at < ?", deletedAt))
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) DeletedAtLte(deletedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("deleted_at <= ?", deletedAt))
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) DeletedAtNe(deletedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("deleted_at != ?", deletedAt))
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) GetUpdater() ArticleUpdater {
	return NewArticleUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) IDEq(ID uint) ArticleQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) IDGt(ID uint) ArticleQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) IDGte(ID uint) ArticleQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) IDIn(ID uint, IDRest ...uint) ArticleQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id IN (?)", iArgs))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) IDLt(ID uint) ArticleQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) IDLte(ID uint) ArticleQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) IDNe(ID uint) ArticleQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) IDNotIn(ID uint, IDRest ...uint) ArticleQuerySet {
	iArgs := []interface{}{ID}
	for _, arg := range IDRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", iArgs))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) Limit(limit int) ArticleQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs ArticleQuerySet) One(ret *Article) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) OrderAscByCreatedAt() ArticleQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByDeletedAt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) OrderAscByDeletedAt() ArticleQuerySet {
	return qs.w(qs.db.Order("deleted_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) OrderAscByID() ArticleQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) OrderAscByUpdatedAt() ArticleQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) OrderDescByCreatedAt() ArticleQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByDeletedAt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) OrderDescByDeletedAt() ArticleQuerySet {
	return qs.w(qs.db.Order("deleted_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) OrderDescByID() ArticleQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) OrderDescByUpdatedAt() ArticleQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u ArticleUpdater) SetCreatedAt(createdAt time.Time) ArticleUpdater {
	u.fields[string(ArticleDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u ArticleUpdater) SetDeletedAt(deletedAt *time.Time) ArticleUpdater {
	u.fields[string(ArticleDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u ArticleUpdater) SetID(ID uint) ArticleUpdater {
	u.fields[string(ArticleDBSchema.ID)] = ID
	return u
}

// SetTitle is an autogenerated method
// nolint: dupl
func (u ArticleUpdater) SetTitle(title string) ArticleUpdater {
	u.fields[string(ArticleDBSchema.Title)] = title
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u ArticleUpdater) SetUpdatedAt(updatedAt time.Time) ArticleUpdater {
	u.fields[string(ArticleDBSchema.UpdatedAt)] = updatedAt
	return u
}

// TitleEq is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) TitleEq(title string) ArticleQuerySet {
	return qs.w(qs.db.Where("title = ?", title))
}

// TitleIn is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) TitleIn(title string, titleRest ...string) ArticleQuerySet {
	iArgs := []interface{}{title}
	for _, arg := range titleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("title IN (?)", iArgs))
}

// TitleNe is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) TitleNe(title string) ArticleQuerySet {
	return qs.w(qs.db.Where("title != ?", title))
}

// TitleNotIn is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) TitleNotIn(title string, titleRest ...string) ArticleQuerySet {
	iArgs := []interface{}{title}
	for _, arg := range titleRest {
		iArgs = append(iArgs, arg)
	}
	return qs.w(qs.db.Where("title NOT IN (?)", iArgs))
}

// Update is an autogenerated method
// nolint: dupl
func (u ArticleUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u ArticleUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) UpdatedAtEq(updatedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) UpdatedAtGt(updatedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) UpdatedAtGte(updatedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) UpdatedAtLt(updatedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) UpdatedAtLte(updatedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs ArticleQuerySet) UpdatedAtNe(updatedAt time.Time) ArticleQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// ===== END of query set ArticleQuerySet

// ===== BEGIN of Article modifiers

// ArticleDBSchemaField describes database schema field. It requires for method 'Update'
type ArticleDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f ArticleDBSchemaField) String() string {
	return string(f)
}

// ArticleDBSchema stores db field names of Article
var ArticleDBSchema = struct {
	ID        ArticleDBSchemaField
	CreatedAt ArticleDBSchemaField
	UpdatedAt ArticleDBSchemaField
	DeletedAt ArticleDBSchemaField
	Title     ArticleDBSchemaField
}{

	ID:        ArticleDBSchemaField("id"),
	CreatedAt: ArticleDBSchemaField("created_at"),
	UpdatedAt: ArticleDBSchemaField("updated_at"),
	DeletedAt: ArticleDBSchemaField("deleted_at"),
	Title:     ArticleDBSchemaField("title"),
}

// Update updates Article fields by primary key
// nolint: dupl
func (o *Article) Update(db *gorm.DB, fields ...ArticleDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"title":      o.Title,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Article %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ArticleUpdater is an Article updates manager
type ArticleUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewArticleUpdater creates new Article updater
// nolint: dupl
func NewArticleUpdater(db *gorm.DB) ArticleUpdater {
	return ArticleUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&Article{}),
	}
}

// ===== END of Article modifiers

// ===== END of all query sets
